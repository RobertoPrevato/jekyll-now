//
//Knight generated templates file.
//
if (!ko.templates) ko.templates = {};
(function (templates) {
  var o = {
    'dropmenu': '<div class="btn-group" data-bind="css: css"> <button type="button" class="btn btn-default" data-bind="text: text"></button> <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> <span class="caret"></span> <span class="sr-only">{{I.t("voc.ToggleDrop")}}</span> </button> <ul class="dropdown-menu"> <!--ko foreach: items--> <!--ko if: $data.separator--> <li role="separator" class="divider"></li> <!--/ko--> <!--ko ifnot: $data.separator--> <li data-bind="click: $parent.setitem.bind($parent)"> <!--ko if: $data.href--> <a data-bind="href: href, text: text"></a> <!--/ko--> <!--ko ifnot: $data.href--> <span tabindex="0" data-bind="text: text"></span> <!--/ko--> </li> <!--/ko--> <!--/ko--> </ul> </div>',
    'generic-dialog': '<div data-bind="attr: { id: $data.id }, modal: _.extend({ onClose: function () { $parent.dialog(void (0)); } }, $data.modalOptions), css: (status || \'info\')" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true"> <div class="modal-dialog modal-lg" data-bind="css: $data.className || \'\'"> <div class="modal-content"> <div class="modal-header"> <!--ko ifnot: $data.hasCloseButton === false--> <button type="button" class="close" data-dismiss="modal" aria-label="@I.t(\'voc.Close\')@"><span aria-hidden="true">×</span></button> <!--/ko--> <h4 class="modal-title" data-bind="text: title"></h4> </div> <div class="modal-body" data-bind="html: content"></div> <!--ko if: $data.showMemoryKey--> <div class="modal-body"> <hr /> <input id="do-not-display" type="checkbox" data-bind="event: { change: setShowMemory }" /> <label for="do-not-display" data-bind="text: dontDisplayAnymoreLabel"></label> </div> <!--/ko--> <div class="modal-footer"> <!--ko if: $data.buttons && buttons.length--> <div data-bind="foreach: { data: buttons, as: \'b\' }"> <button data-bind="text: b.text, click: _.bind(b.click, $data), css: b.className"></button> </div> <!--/ko--> </div> </div> </div> </div>',
    'confirm-dialog': '<div data-bind="attr: { id: $data.id }, modal: _.extend({ onClose: function () { $parent.dialog(void (0)); } }, $data.modalOptions), css: ($data.status || \'info\')" class="modal" tabindex="-1" role="dialog" aria-hidden="true"> <div class="modal-dialog modal-lg" data-bind="css: $data.className || \'\'"> <div class="modal-content"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" aria-label="@I.t(\'voc.Close\')@"><span aria-hidden="true">×</span></button> <h4 class="modal-title" data-bind="text: $data.title"></h4> </div> <div class="modal-body" data-bind="html: $data.content"></div> <div class="modal-footer"> <button class="btn btn-danger" data-bind="click: confirm">@I.t("voc.Confirm")@</button> <button class="btn" data-dismiss="modal" data-bind="focus, click: $data.cancel || function(){}">@I.t("voc.Cancel")@</button> </div> </div> </div> </div>',
    'view': '<!--ko if: dialog()--> <div data-bind="template: { name: dialog().type, data: dialog }"></div> <!--/ko--> <!--ko if: template() && panel()--> <div data-bind="template: { name: template(), data: panel }"></div> <!--/ko-->',
    'error-panel': '﻿ <div class="main-error"> <div class="alert" data-bind="css: \'alert-\' + (status || \'danger\')"> <h2 data-bind="text: title"></h2> <!--ko if: $data.message--> <p data-bind="text: message"></p> <!--/ko--> <!--ko if: $data.retry--> <button class="btn" data-bind="click: retry">@I.t("voc.TryAgain")@</button> <!--/ko--> </div> </div>',
    'preloader': '﻿ <div class="preloader-mask"> <div class="preloader-icon"></div> </div>',
    'generic-panel': '<!--ko if: loading()--> <div data-bind="template: \'preloader\'"></div> <!--/ko--> <!--ko ifnot: loading()--> <!--ko if: error()--> <div data-bind="template: { name: \'error-panel\', data: error }"></div> <!--/ko--> <!--ko ifnot: error()--> <div data-bind="template: subtemplate"></div> <!--/ko--> <!--/ko-->'
  };
  var x;
  for (x in o) {
    templates[x] = o[x];
  }
})(ko.templates);