//
//Knight generated templates file.
//
if (!ko.templates) ko.templates = {};
(function (templates) {
  var o = {
    'gettingstarted': '<h2>Getting started</h2> <ol> <li> See how this page is working. </li> <li> <button class="btn" data-bind="click: open_dialog">And how Knockout works (how models, views and templates interacts).</button> </li> </ol> <!--ko if: dialog()--> <div data-bind="template: { name: \'generic-dialog\', data: dialog }"></div> <!--/ko--> <h3>How to define routes</h3> <ol> <li>Organize the routes per area, defining modules using R.js</li> <li>See the example included in the repository</li> <li>Refer to <a href="https://github.com/buero-fuer-ideen/Simrou" target="_blank">Simrou documentation</a></li> </ol> <h3>Code organization</h3> <ol> <li>Keep your ajax requests code in dedicated files (services.js)</li> <li>Perform DOM manipulation in custom Knockout binders</li> <li>Keep your models clean, use the provided base <strong>model</strong> function and its <strong>extend</strong> function.</li> </ol> <h3>Tools</h3> <ol> <li>The project template includes Grunt to compile LESS code into CSS, and to bundle and minify JavaScript.</li> <li>(Recommended) use the <a href="https://github.com/RobertoPrevato/Knight" target="_blank">Knight tool</a> to generate external html templates.</li> </ol> <hr /> <a href="https://github.com/RobertoPrevato/Humbular">https://github.com/RobertoPrevato/Humbular</a>',
    'dashboard': '<h2>Single Page Application project template, freely inspired by Durandal.</h2> <p>Humbular consists of a bundle of different libraries that cover different needs, and is meant to offer an intelligible and maintainable folder structure that allows for unit testing, but free from domineering opinions.</p> <h3>Humbular includes the following libraries:</h3> <ol> <li><a href="http://getbootstrap.com/" target="_blank">Bootstrap</a>, for widgets</li> <li><a href="https://github.com/RobertoPrevato/I.js" target="_blank">I.js</a>, for client side localization</li> <li><a href="https://jquery.com/" target="_blank">jQuery</a>, as utility library (ajax; promise; etc.)</li> <li><a href="http://knockoutjs.com/" target="_blank">Knockout</a>, for dual way binding</li> <li><a href="https://lodash.com/" target="_blank">Lodash</a>, for utility functions (map, each, etc.)</li> <li><a href="https://github.com/RobertoPrevato/R.js" target="_blank">R.js</a>, for dependency injection</li> <li><a href="https://github.com/buero-fuer-ideen/Simrou" target="_blank">Simrou.js</a>, for client side routing</li> </ol> <hr /> <h3>Humbular offers:</h3> <ol> <li>Code organization strategy</li> <li>An un-opinionated, <strong>humble</strong>, technology stack (no cocky super-heroes here!)</li> <li>A simple way to deal with dependency injection, that <strong>avoids AMD complications</strong></li> <li>A strategy to display preloaders and error panels</li> <li>A strategy to work with external html templates and to load modules</li> <li>Client side localization strategy</li> </ol> <hr /> <a href="https://github.com/RobertoPrevato/Humbular">https://github.com/RobertoPrevato/Humbular</a>'
  };
  var x;
  for (x in o) {
    templates[x] = o[x];
  }
})(ko.templates);